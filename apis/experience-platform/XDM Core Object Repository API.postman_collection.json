{
	"info": {
		"_postman_id": "92274a1d-b257-4de3-9174-41284a14840f",
		"name": "XDM Core Object Repository API",
		"description": "Experience Data Model (XDM) Core Object Repository is an event-driven repository for XDM instances, fully integrated with Adobe Experience Platform. XDM Core Object Repository is part of Decisioning Service, which provides the ability to programmatically and intelligently select the ‘Next Best Experience’ from a set of available options for a given individual, deliver them to any channel or application, and perform reporting and analysis on those experiences. Decisioning Service is controlled by a number of interrelated business objects. The XDM Core Object Repository API allows you to access and manage those business objects within the repository. \n\nRelated documentation:\n  * [Decisioning Service overview](https://www.adobe.io/apis/experienceplatform/home/services/decisioning-service.html#!api-specification/markdown/narrative/technical_overview/decisioning-overview/decisioning-service-overview.md)\n  * [Managing Decisioning Service entities using APIs tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/decisioning_tutorial/decisioning_entities_api_tutorial.md)\n\nVisualize API calls with Postman (a free, third-party software):\n  * [XDM Core Object Repository API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/XDM%20Core%20Object%20Repository%20API.postman_collection.json)\n  * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)\n  * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)\n\nAPI paths:\n  * PLATFORM Gateway URL: https://<span>platform.adobe.io/\n  * Base path for this API: /data/core/xcore\n  * Example of a complete path: https://<span>platform.adobe.io/data/core/xcore\n\nRequired headers:\n  * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md).\n  * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Queries",
			"item": [
				{
					"name": "Rich core search interface for XDM instances.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "61ab6f41-9678-44ea-9c1b-185204f8662c",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization \"Bearer\" token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/queries/core/search?schema={{schema}}&q={{q}}&qop={{qop}}&field={{field}}&property={{property}}&orderby={{orderby}}&start={{start}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"queries",
								"core",
								"search"
							],
							"query": [
								{
									"key": "schema",
									"value": "{{schema}}"
								},
								{
									"key": "q",
									"value": "{{q}}"
								},
								{
									"key": "qop",
									"value": "{{qop}}"
								},
								{
									"key": "field",
									"value": "{{field}}"
								},
								{
									"key": "property",
									"value": "{{property}}"
								},
								{
									"key": "orderby",
									"value": "{{orderby}}"
								},
								{
									"key": "start",
									"value": "{{start}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								}
							]
						},
						"description": "Query instances in a container."
					},
					"response": []
				},
				{
					"name": "Core query for instances by schema ID or name.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "d45bda07-c81f-44a2-aa7a-051a639bce6d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/instances?schema={{schema}}&id={{id}}&name={{name}}&property={{property}}&orderby={{orderby}}&start={{start}}&limit={{limit}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"instances"
							],
							"query": [
								{
									"key": "schema",
									"value": "{{schema}}"
								},
								{
									"key": "id",
									"value": "{{id}}"
								},
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "property",
									"value": "{{property}}"
								},
								{
									"key": "orderby",
									"value": "{{orderby}}"
								},
								{
									"key": "start",
									"value": "{{start}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								}
							]
						},
						"description": "The Collections API is designed to return a list of instances of a particular schema type defined by:<ul><li>All instances in a container that match a set of schemas.</li><li>Instances matching a name regex (MUST contain `xdm:name` property); or a list of specific instance IDs.</li></ul>"
					},
					"response": []
				}
			],
			"_postman_id": "297bd8be-26e0-403e-a21f-01dd662e60c2",
			"description": "Core Queries against XDM instances."
		},
		{
			"name": "Instances",
			"item": [
				{
					"name": "Create a new XDM instance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "d2e980e8-2bdd-4566-9361-02117a14d4e6",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/instances",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"instances"
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								}
							]
						},
						"description": "Create a new instance of a given model schema. Use the HAL link with the relationship type `api:create` that can be obtained from the Home (\"/\") endpoint as the complete URL. Alternatively, you can construct the URL from the `containerId` received from the Container API."
					},
					"response": []
				},
				{
					"name": "Get a specific instance on an object.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "ab617662-e40d-49df-861d-7be5f0fb98f7",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "If-None-Match",
								"value": "{{If-None-Match}}",
								"description": "Used with etag value for a conditional GET request.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/instances/:instanceId",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"instances",
								":instanceId"
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								}
							]
						},
						"description": "Get an instance of an object."
					},
					"response": []
				},
				{
					"name": "Update an existing XDM instance.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "01ad2f35-cbfd-4351-b3e8-e991241f0a27",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "If-Match",
								"value": "{{If-Match}}",
								"description": "Etag which must match the etag on the object in order for the write operation to succeed, otherwise the request will return HTTP Status 409 (Conflict).",
								"type": "integer",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/instances/:instanceId",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"instances",
								":instanceId"
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								}
							]
						},
						"description": "Updates an existing instance using a constructed URL. Use the `Location` header or a HAL link received from a prior API call for this object as the complete URL for this endpoint. If this is not possible, you can construct the URL from the `containerId` and the `instanceId`. `Content-type` negotiation is used to pass in the schema which represents the schema type that is registered with the instance and also is used to validate the instance. For PUT and PATCH operations the schema is optionally given as it was required on the POST request to create the instance."
					},
					"response": []
				},
				{
					"name": "Update instance using patch protocol.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "adaf348c-9526-47e6-9b80-88d16e27f228",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "If-Match",
								"value": "{{If-Match}}",
								"description": "Used for optimistic lock on a write request. Contains etag value from previous request which is compared against latest value on the object. If values differ, the write request is rejected and returns HTTP Status 409 (Conflict).",
								"type": "integer",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/instances/:instanceId",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"instances",
								":instanceId"
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								}
							]
						},
						"description": "Update an existing XDM instance using JSON Patch protocol. Updates an existing instance using a patch document. Use the `Location` header or a HAL link received from a prior API call for this object as the complete URL for this API. If this is not possible, you can construct the URL from the `containerId` and the `instanceId`."
					},
					"response": []
				},
				{
					"name": "Delete an XDM instance.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "76864f8a-2305-45b0-8c7d-08827e9d0f58",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "If-Match",
								"value": "{{If-Match}}",
								"description": "Etag must match the etag on the object for the request to succeed, otherwise an HTTP Status 409 (Conflict) is returned.",
								"type": "integer",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/:containerId/instances/:instanceId",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								":containerId",
								"instances",
								":instanceId"
							],
							"variable": [
								{
									"value": "{{containerId}}",
									"id": "containerId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								}
							]
						},
						"description": "Deletes an existing instance using a constructed URL. Use the `Location` header or a HAL link received from a prior API call for this object as the complete URL for this API. If this is not possible, you can construct the URL from the `containerId` and the `instanceId`."
					},
					"response": []
				}
			],
			"_postman_id": "87bb32af-b69d-46b8-ae8e-052c97840f1a",
			"description": "Perform CRUD operations to add, edit, update, delete, and view instances via the primary `instanceId`."
		},
		{
			"name": "Home",
			"item": [
				{
					"name": "View the home directory for an IMS organization.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"if (!pm.environment.has(\"SANDBOX-NAME\")) { pm.request.headers.remove(\"x-sandbox-name\"); }"
								]
							}
						}
					],
					"_postman_id": "106c0be8-7752-42c4-831e-5d215348995d",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "Access token in the format \"Bearer {ACCESS_TOKEN}\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "IMS organization ID. The container specified in the `containerId` parameter must be owned by the IMS Org attempting to access it.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "API key of calling client.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-request-id",
								"value": "{{x-request-id}}",
								"description": "A string in UUID format that is globally unique and must not be reused for different API calls. The request ID is used for debugging purposes and tracking of each API call performed. For example, \"d41ee840-0a10-4393-ab55-12fa54cb6172\".",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-user-token",
								"value": "{{x-user-token}}",
								"description": "Required when the Authorization 'Bearer' token is a service access token, otherwise this parameter is ignored. Identifies the user on whose behalf the service is calling. User must have been provided with at least one of the Product Profiles belonging to the IMS Org whose IMS Org ID the caller provides as the `x-gw-ims-org-id` request header and write access permissions specific to schema type in the container for the IMS Org specified in `x-gw-ims-org-id`.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "Identifies the Adobe Experience Platform sandbox to use. Default sandbox is 'prod'",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/?product={{product}}&start={{start}}&limit={{limit}}&property={{property}}",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": "product",
									"value": "{{product}}"
								},
								{
									"key": "start",
									"value": "{{start}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "property",
									"value": "{{property}}"
								}
							]
						},
						"description": "View the home document for an IMS Organization. The home document is a HAL (Hypermedia Access Language) document which can be used as the hypermedia home directory for the IMS Organization specified. It lists relevant HAL links that can be traversed and also lists all of the containers belonging to the Org. The containers are ordered by the `repo:createdDate` property."
					},
					"response": []
				}
			],
			"_postman_id": "5bfd7e24-9936-4a2e-82eb-a672a810ac04",
			"description": "Home document for an IMS Organization. The home document is a HAL (Hypermedia Access Language) document which can be used as the hypermedia home directory for the IMS Organization specified. It lists relevant HAL links that can be traversed and also lists all of the containers belonging to the Org."
		}
	]
}