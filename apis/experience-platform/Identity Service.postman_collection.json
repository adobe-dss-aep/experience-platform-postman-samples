{
	"info": {
		"_postman_id": "698dc4cb-1368-49b8-a4e7-1b5e78168b01",
		"name": "Identity Service",
		"description": "Delivering relevant digital experiences requires having a complete understanding of your customer. This is made more difficult when your customer data is fragmented across disparate systems, causing each individual customer to appear to have multiple \"identities\". Adobe Experience Platform Identity Service provides a RESTful API to help you to gain a better view of your customers and their behavior. By bridging identities across devices and systems, you are better able to deliver impactful, personal digital experiences in real-time.\n\nRelated documentation:\n  * [Identity Service overview](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/identity_services_architectural_overview/identity_services_architectural_overview.md)\n  * [Identity Service developer guide](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/identity_services_architectural_overview/identity_services_api.md)\n  * [Identity namespace overview](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/identity_namespace_overview/identity_namespace_overview.md)\n  * [Identity Service troubleshooting guide](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/identity_services_architectural_overview/identity_services_faq.md)\n\nVisualize API calls with Postman (a free, third-party software):\n  * [Identity Service API Postman collection on GitHub](https://github.com/adobe/experience-platform-postman-samples/blob/master/apis/experience-platform/Identity%20Service.postman_collection.json)\n  * [Video guide for creating the Postman environment](https://video.tv.adobe.com/v/28832)\n  * [Steps for importing environments and collections in Postman](https://learning.getpostman.com/docs/postman/collection_runs/using_environments_in_collection_runs/)\n\nAPI paths:\n  * PLATFORM Gateway URL: https://<span>platform-{REGION}.adobe.io\n    * Information on <code>{REGION}</code> values can be found in the [Identity Service developer guide](https://www.adobe.io/apis/experienceplatform/home/profile-identity-segmentation/profile-identity-segmentation-services.html#!api-specification/markdown/narrative/technical_overview/identity_services_architectural_overview/identity_services_api.md).\n  * Base path for this API: /data/core/\n  * Example of a complete path: https://<span>platform-va7.adobe.io/data/core/identity/cluster/members\n\nRequired headers:\n  * All calls require the headers `Authorization`, `x-gw-ims-org-id`, and `x-api-key`. For more information on how to obtain these values, see the [authentication tutorial](https://www.adobe.io/apis/experienceplatform/home/tutorials/alltutorials.html#!api-specification/markdown/narrative/tutorials/authenticate_to_acp_tutorial/authenticate_to_acp_tutorial.md).\n  * All requests with a payload in the request body (such as POST, PUT, and PATCH calls) must include the header `Content-Type` with a value of `application/json`.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Identity",
			"item": [
				{
					"name": "Given an id and namespace returns an identity string",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "e12a38be-c0e7-4a08-bca8-77c4db3ced58",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/identity?nsid=411&namespace=adcloud&id=2521328045094711779817",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"identity"
							],
							"query": [
								{
									"key": "nsid",
									"value": "411"
								},
								{
									"key": "namespace",
									"value": "adcloud"
								},
								{
									"key": "id",
									"value": "2521328045094711779817"
								}
							]
						},
						"description": "Given the namespace and id in that namespace, returns XID string."
					},
					"response": []
				}
			],
			"_postman_id": "c8160060-4cf6-4d01-9801-cd1e33f70338",
			"description": "Identity services provide access to a profile identity in XID form."
		},
		{
			"name": "Cluster",
			"item": [
				{
					"name": "Given an identity, returns all linked identities in that cluster.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "1bca98e2-d0a7-4c6f-9db5-93dc1bc3ae03",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/cluster/members?xid=2521328045094711779817&nsid=411&namespace=adcloud&id=2521328045094711779817&graph-type=Private Graph",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"cluster",
								"members"
							],
							"query": [
								{
									"key": "xid",
									"value": "2521328045094711779817"
								},
								{
									"key": "nsid",
									"value": "411"
								},
								{
									"key": "namespace",
									"value": "adcloud"
								},
								{
									"key": "id",
									"value": "2521328045094711779817"
								},
								{
									"key": "graph-type",
									"value": "Private Graph"
								}
							]
						},
						"description": "Given an XID return all XIDs, in the same or other namespaces, that are linked to it by the device graph type. The related XIDs are considered to be part of the same cluster. It is required to pass either xid or (namespace/nsid & id) pair to get cluster members."
					},
					"response": []
				},
				{
					"name": "Given set of identities, returns all linked identities in cluster corresponding to each identity.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "ffaaf05e-e75a-47ef-929c-86ef81fd0c18",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/clusters/members",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"clusters",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Given an XID, return all cluster association statistics for that XID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "8385326a-dd20-453b-a645-44f8424fbb8c",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/cluster/history?xid=2521328045094711779817&nsid=411&namespace=adcloud&id=2521328045094711779817&graph-type=Private Graph",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"cluster",
								"history"
							],
							"query": [
								{
									"key": "xid",
									"value": "2521328045094711779817"
								},
								{
									"key": "nsid",
									"value": "411"
								},
								{
									"key": "namespace",
									"value": "adcloud"
								},
								{
									"key": "id",
									"value": "2521328045094711779817"
								},
								{
									"key": "graph-type",
									"value": "Private Graph"
								}
							]
						},
						"description": "Given an XID, return all cluster associations with that XID. It is required to pass either xid or (namespace/nsid & id) pair to get cluster history."
					},
					"response": []
				},
				{
					"name": "Given a set of XIDs, return all corresponding cluster association statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "63a72710-9a58-42d9-9857-ddc3554f5d5b",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/clusters/history",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"clusters",
								"history"
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "eed501a9-e068-4106-b2a3-85801ce75364",
			"description": "Cluster services provide access to groupings of identities as linked in the identity graph."
		},
		{
			"name": "Mappings",
			"item": [
				{
					"name": "Given an identity and target namespace, returns the linked identity",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "111cdeab-3413-4744-a7bd-416081401396",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/mapping?xid=2521328045094711779817&nsid=411&namespace=adcloud&id=2521328045094711779817&targetNs=411",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"mapping"
							],
							"query": [
								{
									"key": "xid",
									"value": "2521328045094711779817"
								},
								{
									"key": "nsid",
									"value": "411"
								},
								{
									"key": "namespace",
									"value": "adcloud"
								},
								{
									"key": "id",
									"value": "2521328045094711779817"
								},
								{
									"key": "targetNs",
									"value": "411"
								}
							]
						},
						"description": "Given an XID, returns all XID mappings in the requested namespace (targetNs). It is required to pass either xid or (namespace/nsid & id) pair to get mappings in required namespace."
					},
					"response": []
				},
				{
					"name": "Given set of identities and target namespace, returns the corresponding linked identities.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "33b30fa9-a0cb-4002-bea4-919c34d1a9a6",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-uis-cst-ctx",
								"value": "stub",
								"description": "Customer context to be used for stub response",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{body}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/identity/mappings",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"identity",
								"mappings"
							]
						},
						"description": "Given an identity, returns all identity mappings in requested namespace (target namespace).\n"
					},
					"response": []
				}
			],
			"_postman_id": "3c2a4456-6ea7-4bea-a6a8-b976f285d7c4",
			"description": "Mapping allows you to provide a fully qualified identity and will return the linked identity from another namespace."
		},
		{
			"name": "Identity Namespace",
			"item": [
				{
					"name": "Lists all namespaces available to the client `x-gw-ims-org-id`",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "ab0e5611-e77f-456d-a694-b229af975f49",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create namespace under `x-gw-ims-org-id` IMS Org .",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "1bda3dd5-d448-484d-8eeb-f7e65cab37f3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{namespace_to_create}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/identities",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities"
							]
						}
					},
					"response": []
				},
				{
					"name": "List details of a single namespace identified by `{id}` if it is accessible to `x-gw-ims-org-id`",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "14800d09-c3d6-43f3-93bd-1aaa243a8bad",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/identities/:id",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update namespace owned by `x-gw-ims-org-id` and having the given `id`.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "1e585609-7fa6-4476-9309-417697d93788",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{namespace_to_create}}"
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/identities/:id",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"identities",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lists shared namespaces for the given `{imsorg}` or all owned if `{imsorg}` == `x-gw-ims-org-id`",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "9a4863f3-a5c0-4a69-9766-b9b1eca71d45",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/orgs/:imsorg/identities",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"orgs",
								":imsorg",
								"identities"
							],
							"variable": [
								{
									"value": "{{imsorg}}",
									"id": "imsorg"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List details of a single namespace identified by `{id}` if it is accessible to `x-gw-ims-org-id`",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"/** Begin Adobe-provided Pre-Request Scripts **/",
									"// Do not send HTTP Headers with empty variables, as Postman will send the literal variable name",
									"pm.request.headers.each(header => {",
									"    if (header.value.startsWith(\"{{\") && header.value.endsWith(\"}}\")) {",
									"        if (!pm.variables.get(header.value.substring(2, header.value.length - 2))) { pm.request.headers.remove(header.key); }",
									"    }",
									"});",
									"",
									"// Do not send HTTP URL Query Parameters with empty variables, as Postman will send the literal variable name",
									"pm.request.url.query.remove(q => { ",
									"    if (q.value.startsWith(\"{{\") && q.value.endsWith(\"}}\")) {",
									"        return !pm.variables.get(q.value.substring(2, q.value.length - 2));",
									"    } ",
									"});",
									"/** End Adobe-provided Pre-Request Scripts **/"
								]
							}
						}
					],
					"_postman_id": "d0f676a0-5780-4872-b51a-e29f5a16dbfb",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.adobe.xed+json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ACCESS_TOKEN}}",
								"description": "The access token which can be copied from your Experience Platform integration, prefixed with \"Bearer \".  For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-api-key",
								"value": "{{API_KEY}}",
								"description": "The API key which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-gw-ims-org-id",
								"value": "{{IMS_ORG}}",
								"description": "The Organization ID which can be copied from your Experience Platform integration. For more information on how  to obtain this value, visit the documentation covering making API calls in the  [Adobe Experience Platform Overview](https://www.adobe.io/apis/experienceplatform/home/overview.html).",
								"type": "string",
								"enabled": true
							},
							{
								"key": "x-sandbox-name",
								"value": "{{SANDBOX_NAME}}",
								"description": "The name of the sandbox in which the operation will take place. See the [sandboxes overview documentation](https://www.adobe.io/apis/experienceplatform/home/permissions-and-sandboxes/permissions-and-sandboxes.html#!api-specification/markdown/narrative/technical_overview/sandboxes/sandboxes-overview.md) for more information.",
								"type": "string",
								"enabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "https://platform.adobe.io/data/core/idnamespace/orgs/:imsorg/identities/:id",
							"protocol": "https",
							"host": [
								"platform",
								"adobe",
								"io"
							],
							"path": [
								"data",
								"core",
								"idnamespace",
								"orgs",
								":imsorg",
								"identities",
								":id"
							],
							"variable": [
								{
									"value": "{{imsorg}}",
									"id": "imsorg"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						}
					},
					"response": []
				}
			],
			"_postman_id": "f390c14d-e13a-4443-af76-32e3e735d2b0",
			"description": "Identity Namespace services allow you to work with Namespaces for your organization, such as to list all Namespaces available or to create a custom Namespace."
		}
	]
}