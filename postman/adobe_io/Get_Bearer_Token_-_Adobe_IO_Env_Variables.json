{
  "info": {
    "_postman_id": "2c11f1cc-628f-4f23-8793-ab06e54ffafb",
    "name": "Get Bearer Token - Adobe IO Env Variables",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Auth setup",
      "item": [
        {
          "name": "INIT: Load Crypto Library for RS256",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "824e628b-b420-417b-894b-417ab6412896",
                "exec": [
                  "postman.setGlobalVariable(\"jsrsasign-js\", responseBody);",
                  "tests[\"Javascript load complete\"] = true; "
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "f4ee0d46-72da-4827-9dd6-fc296aa39402",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": "http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js",
            "description": "Load the RSA-Sign Crypto LIbrary in a global environment variable\n\nSource: http://kjur.github.io/jsrsasign/jsrsasign-latest-all-min.js\n\nGithub: https://github.com/kjur/jsrsasign"
          },
          "response": []
        },
        {
          "name": "NEW POSTMAN EVARS IMS: JWT Generate + Auth via User Token Copy",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "685cb13c-fa6d-4d1d-afbd-e2e7989018d5",
                "exec": [
                  "// Tips from: https://github.com/kjur/jsrsasign/issues/199",
                  "// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
                  "",
                  "var navigator = {}; //fake a navigator object for the lib",
                  "var window = {}; //fake a window object for the lib",
                  "eval(postman.getGlobalVariable(\"jsrsasign-js\")); //import javascript jsrsasign",
                  "",
                  "",
                  "var header = {",
                  "\t\"alg\": \"RS256\"",
                  "};",
                  "",
                  "var data = {",
                  "\t\"exp\": Math.round(87000 + Date.now()/1000),",
                  "\t\"iss\": postman.getEnvironmentVariable(\"IMS_ORG\"),",
                  "\t\"sub\": postman.getEnvironmentVariable(\"TECHNICAL_ACCOUNT_ID\"),",
                  "\t\"aud\": \"https://\"+postman.getEnvironmentVariable(\"IMS\")+\"/c/\"+postman.getEnvironmentVariable(\"API_KEY\")",
                  "};",
                  "",
                  "meta_scopes = postman.getEnvironmentVariable(\"META_SCOPE\").toString().split(',');",
                  "meta_scopes.forEach(function(scope){",
                  "    var meta_scope = \"https://\"+postman.getEnvironmentVariable(\"IMS\")+\"/s/\"+",
                  "                     scope;",
                  "    data[meta_scope] = true;",
                  "});",
                  "",
                  "var secret = postman.getEnvironmentVariable(\"PRIVATE_KEY\");",
                  "",
                  "var sHeader = JSON.stringify(header);",
                  "var sPayload = JSON.stringify(data);",
                  "var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
                  "",
                  "console.log(sPayload);",
                  "console.log(sJWT);",
                  "",
                  "postman.setEnvironmentVariable(\"JWT_TOKEN\", sJWT);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a5ef3854-65f5-4b85-818f-d96b9585a825",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c3dbd462-bcbe-4521-860d-9d3db3b1a11b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "client_id",
                  "type": "text",
                  "value": "{{API_KEY}}"
                },
                {
                  "key": "client_secret",
                  "type": "text",
                  "value": "{{CLIENT_SECRET}}"
                },
                {
                  "key": "jwt_token",
                  "type": "text",
                  "value": "{{JWT_TOKEN}}"
                }
              ]
            },
            "url": "https://{{IMS}}/ims/exchange/jwt/",
            "description": "Generate a JWT token using the Crypto RS256\nSend to IMS for access_token"
          },
          "response": [
            {
              "id": "21f1a327-0d29-49f5-be2c-b93c33be3c1a",
              "name": "NEW POSTMAN EVARS IMS: JWT Generate + Auth via User Token Copy",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "client_id",
                      "type": "text",
                      "value": "{{API_KEY}}"
                    },
                    {
                      "key": "client_secret",
                      "type": "text",
                      "value": "{{CLIENT_SECRET}}"
                    },
                    {
                      "key": "jwt_token",
                      "type": "text",
                      "value": "{{JWT_TOKEN}}"
                    }
                  ]
                },
                "url": "https://{{IMS}}/ims/exchange/jwt/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Cache-Control",
                  "value": "no-store"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "key": "P3P",
                  "value": "CP=\"IDC DSP COR CURa ADMa OUR IND PHY ONL COM STA\""
                },
                {
                  "key": "Server",
                  "value": "ASIT"
                },
                {
                  "key": "Set-Cookie",
                  "value": "ftrset=815; path=/; secure; HttpOnly"
                },
                {
                  "key": "Set-Cookie",
                  "value": "relay=6b6e9837-cde5-4a4f-8fa7-02638f65a1d4; path=/"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000; includeSubDomains; preload"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-DEBUG-ID",
                  "value": "6b6e9837-cde5-4a4f-8fa7-02638f65a1d4"
                },
                {
                  "key": "X-FEATURE-SET",
                  "value": "815"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "DENY"
                },
                {
                  "key": "X-Via",
                  "value": "vx-uw2,vx-ue1"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "Content-Length",
                  "value": "987"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"token_type\": \"bearer\",\n    \"access_token\": \"eyJ4NXUiOiJpbXNfbmExLWtleS0xLmNlciIsImFsZyI6IlJTMjU2In0.eyJpZCI6IjE1NjgzOTYxOTcxNzlfYTE0OWFlNmUtZGExYi00YjgwLWE0M2YtOGU0NGY0MzE1ZTg2X3VlMSIsImNsaWVudF9pZCI6ImQxZjg0ZDFlMWMzNjRhNTZiZjQ1ZmI1YThlODY3ZGFkIiwidXNlcl9pZCI6IkExNUIyMTAyNUQ2RTlFODcwQTQ5NUZDN0B0ZWNoYWNjdC5hZG9iZS5jb20iLCJzdGF0ZSI6IntcInNlc3Npb25cIjpcImh0dHBzOi8vaW1zLW5hMS5hZG9iZWxvZ2luLmNvbS9pbXMvc2Vzc2lvbi92MS9aR1F3TmpCbFpXTXROR1V5TmkwMFl6aGlMV0ZqTURJdFlqWmlORGd6TWpVNU9XWTFMUzFCTVRWQ01qRXdNalZFTmtVNVJUZzNNRUUwT1RWR1F6ZEFkR1ZqYUdGalkzUXVZV1J2WW1VdVkyOXRcIn0iLCJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiYXMiOiJpbXMtbmExIiwiZmciOiJUWU9BQURFRUhMRzVNWFdHQ09FM0FLQUFLQT09PT09PSIsIm1vaSI6Ijc1MTVjZGUiLCJjIjoiSmY2Wnl3ZWtIeHF1Q2NndXpyd0MrZz09IiwiZXhwaXJlc19pbiI6Ijg2NDAwMDAwIiwic2NvcGUiOiJvcGVuaWQsc2Vzc2lvbixBZG9iZUlELHJlYWRfb3JnYW5pemF0aW9ucyxhZGRpdGlvbmFsX2luZm8ucHJvamVjdGVkUHJvZHVjdENvbnRleHQiLCJjcmVhdGVkX2F0IjoiMTU2ODM5NjE5NzE3OSJ9.qwn7m7BnueOwjtTFLaCJnEx68C-yNmYKhQutSccOwZV3KzMfrzstPOkwF1d7xR2hyXtCIdioUw4OhmH9XJ-qpXLC5jOCl5MFGluxBgE0P_U-7Nw6i-4LtbNH0dmH5jlgA0AJkLGTeuIuh05zM9IqpA5CW0VsIQJQyofpIkpBVtMICh88wv9AhJ80JGlW_8gWAmyXf44WkypfUbA1bd6VMdGPHLR7cQ6qnFBIWimo7Ja-lj1I7w8bTvVwrnDhYX7VLA2op-YylGkgCe9TnoAcliSd3yzPU4tqRY_kMCS8U1vBuniJSo2UK7YJtTl8QKhw_HkESJMzKU2P9nHo2OaZnQ\",\n    \"expires_in\": 86399973\n}"
            }
          ]
        },
        {
          "name": "NEW POSTMAN EVARS IMS: JWT Generate + Auth via User Token Copy Copy",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "685cb13c-fa6d-4d1d-afbd-e2e7989018d5",
                "exec": [
                  "// Tips from: https://github.com/kjur/jsrsasign/issues/199",
                  "// https://github.com/kjur/jsrsasign/wiki/Tutorial-for-JWT-generation",
                  "",
                  "var navigator = {}; //fake a navigator object for the lib",
                  "var window = {}; //fake a window object for the lib",
                  "eval(postman.getGlobalVariable(\"jsrsasign-js\")); //import javascript jsrsasign",
                  "",
                  "",
                  "var header = {",
                  "\t\"alg\": \"RS256\"",
                  "};",
                  "",
                  "var data = {",
                  "\t\"exp\": Math.round(87000 + Date.now()/1000),",
                  "\t\"iss\": postman.getEnvironmentVariable(\"IMS_ORG\"),",
                  "\t\"sub\": postman.getEnvironmentVariable(\"TECHNICAL_ACCOUNT_ID\"),",
                  "\t\"aud\": \"https://\"+postman.getEnvironmentVariable(\"IMS\")+\"/c/\"+postman.getEnvironmentVariable(\"API_KEY\")",
                  "};",
                  "",
                  "meta_scopes = postman.getEnvironmentVariable(\"META_SCOPE\").toString().split(',');",
                  "meta_scopes.forEach(function(scope){",
                  "    var meta_scope = \"https://\"+postman.getEnvironmentVariable(\"IMS\")+\"/s/\"+",
                  "                     scope;",
                  "    data[meta_scope] = true;",
                  "});",
                  "",
                  "var secret = postman.getEnvironmentVariable(\"PRIVATE_KEY\");",
                  "",
                  "var sHeader = JSON.stringify(header);",
                  "var sPayload = JSON.stringify(data);",
                  "var sJWT = KJUR.jws.JWS.sign(\"RS256\", sHeader, sPayload, secret);",
                  "",
                  "console.log(sPayload);",
                  "console.log(sJWT);",
                  "",
                  "postman.setEnvironmentVariable(\"JWT_TOKEN\", sJWT);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "a5ef3854-65f5-4b85-818f-d96b9585a825",
                "exec": [
                  "var data = JSON.parse(responseBody);",
                  "postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "cf9e2204-6ff2-45cb-aa29-014d65c321fe",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "client_id",
                  "type": "text",
                  "value": "{{API_KEY}}"
                },
                {
                  "key": "client_secret",
                  "type": "text",
                  "value": "{{CLIENT_SECRET}}"
                },
                {
                  "key": "jwt_token",
                  "type": "text",
                  "value": "{{JWT_TOKEN}}"
                }
              ]
            },
            "url": "https://{{IMS}}/ims/exchange/jwt/",
            "description": "Generate a JWT token using the Crypto RS256\nSend to IMS for access_token"
          },
          "response": [
            {
              "id": "39994f18-6ab2-44b5-8c32-c88727c114e1",
              "name": "NEW POSTMAN EVARS IMS: JWT Generate + Auth via User Token Copy",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "client_id",
                      "type": "text",
                      "value": "{{API_KEY}}"
                    },
                    {
                      "key": "client_secret",
                      "type": "text",
                      "value": "{{CLIENT_SECRET}}"
                    },
                    {
                      "key": "jwt_token",
                      "type": "text",
                      "value": "{{JWT_TOKEN}}"
                    }
                  ]
                },
                "url": "https://{{IMS}}/ims/exchange/jwt/"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Cache-Control",
                  "value": "no-store"
                },
                {
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json;charset=UTF-8"
                },
                {
                  "key": "P3P",
                  "value": "CP=\"IDC DSP COR CURa ADMa OUR IND PHY ONL COM STA\""
                },
                {
                  "key": "Server",
                  "value": "ASIT"
                },
                {
                  "key": "Set-Cookie",
                  "value": "ftrset=815; path=/; secure; HttpOnly"
                },
                {
                  "key": "Set-Cookie",
                  "value": "relay=6b6e9837-cde5-4a4f-8fa7-02638f65a1d4; path=/"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000; includeSubDomains; preload"
                },
                {
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-DEBUG-ID",
                  "value": "6b6e9837-cde5-4a4f-8fa7-02638f65a1d4"
                },
                {
                  "key": "X-FEATURE-SET",
                  "value": "815"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "DENY"
                },
                {
                  "key": "X-Via",
                  "value": "vx-uw2,vx-ue1"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "Content-Length",
                  "value": "987"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "responseTime": null,
              "body": "{\n    \"token_type\": \"bearer\",\n    \"access_token\": \"eyJ4NXUiOiJpbXNfbmExLWtleS0xLmNlciIsImFsZyI6IlJTMjU2In0.eyJpZCI6IjE1NjgzOTYxOTcxNzlfYTE0OWFlNmUtZGExYi00YjgwLWE0M2YtOGU0NGY0MzE1ZTg2X3VlMSIsImNsaWVudF9pZCI6ImQxZjg0ZDFlMWMzNjRhNTZiZjQ1ZmI1YThlODY3ZGFkIiwidXNlcl9pZCI6IkExNUIyMTAyNUQ2RTlFODcwQTQ5NUZDN0B0ZWNoYWNjdC5hZG9iZS5jb20iLCJzdGF0ZSI6IntcInNlc3Npb25cIjpcImh0dHBzOi8vaW1zLW5hMS5hZG9iZWxvZ2luLmNvbS9pbXMvc2Vzc2lvbi92MS9aR1F3TmpCbFpXTXROR1V5TmkwMFl6aGlMV0ZqTURJdFlqWmlORGd6TWpVNU9XWTFMUzFCTVRWQ01qRXdNalZFTmtVNVJUZzNNRUUwT1RWR1F6ZEFkR1ZqYUdGalkzUXVZV1J2WW1VdVkyOXRcIn0iLCJ0eXBlIjoiYWNjZXNzX3Rva2VuIiwiYXMiOiJpbXMtbmExIiwiZmciOiJUWU9BQURFRUhMRzVNWFdHQ09FM0FLQUFLQT09PT09PSIsIm1vaSI6Ijc1MTVjZGUiLCJjIjoiSmY2Wnl3ZWtIeHF1Q2NndXpyd0MrZz09IiwiZXhwaXJlc19pbiI6Ijg2NDAwMDAwIiwic2NvcGUiOiJvcGVuaWQsc2Vzc2lvbixBZG9iZUlELHJlYWRfb3JnYW5pemF0aW9ucyxhZGRpdGlvbmFsX2luZm8ucHJvamVjdGVkUHJvZHVjdENvbnRleHQiLCJjcmVhdGVkX2F0IjoiMTU2ODM5NjE5NzE3OSJ9.qwn7m7BnueOwjtTFLaCJnEx68C-yNmYKhQutSccOwZV3KzMfrzstPOkwF1d7xR2hyXtCIdioUw4OhmH9XJ-qpXLC5jOCl5MFGluxBgE0P_U-7Nw6i-4LtbNH0dmH5jlgA0AJkLGTeuIuh05zM9IqpA5CW0VsIQJQyofpIkpBVtMICh88wv9AhJ80JGlW_8gWAmyXf44WkypfUbA1bd6VMdGPHLR7cQ6qnFBIWimo7Ja-lj1I7w8bTvVwrnDhYX7VLA2op-YylGkgCe9TnoAcliSd3yzPU4tqRY_kMCS8U1vBuniJSo2UK7YJtTl8QKhw_HkESJMzKU2P9nHo2OaZnQ\",\n    \"expires_in\": 86399973\n}"
            }
          ]
        }
      ],
      "_postman_id": "a81baf73-98d8-46ab-9db6-e183348a34ef",
      "description": "Test the Markdown",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "5d587611-840d-4c76-a6a7-7048b56c4a38",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "ded6d34d-ea4c-4791-b433-c5f0a7e047d2",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": {
      "token": "{{ACCESS_TOKEN}}"
    }
  }
}